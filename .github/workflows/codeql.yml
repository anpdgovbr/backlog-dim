name: CodeQL
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: "0 3 * * 1"

env:
  # DATABASE_URL necessário para Prisma generate no build
  DATABASE_URL: "postgresql://user:password@localhost:5432/test_db"

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ["javascript"]
    steps:
      - uses: actions/checkout@v5

      # Preparar Node para builds/instalação
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      # Instalar dependências (fail-fast se lockfile estiver desincronizado)
      - name: Install dependencies
        run: |
          echo "Verificando lockfile com npm ci --dry-run..."
          if npm ci --dry-run --no-audit --no-fund > /dev/null 2>&1; then
            npm ci --no-audit --no-fund
          else
            echo "❌ package-lock.json desincronizado com package.json."
            echo "   Atualize localmente com 'npm install' e faça commit do package-lock.json."
            exit 1
          fi

      # Gerar cliente Prisma antes do build
      - run: npx prisma generate

      - run: npm run build --if-present

      - uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      # Para JS/TS não é necessário autobuild, mas manter o analyze no final:
      - uses: github/codeql-action/analyze@v3
