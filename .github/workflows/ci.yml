name: CI
on:
  pull_request:
    branches: ["main", "develop"]
  push:
    branches: ["main", "develop"]

env:
  # DATABASE_URL necessário para Prisma generate (mesmo sem conectar ao banco nos testes)
  DATABASE_URL: "postgresql://user:password@localhost:5432/test_db"
  # Desabilita hooks do Husky no ambiente de CI
  HUSKY: "0"
  # Força instalação de devDeps e reduz ruído do npm
  NODE_ENV: production
  npm_config_production: "false"
  NPM_CONFIG_FUND: "false"
  NPM_CONFIG_AUDIT: "false"
  NPM_CONFIG_PROGRESS: "false"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - uses: actions/setup-node@v5
        with:
          node-version: "22"
          cache: "pnpm"

      # Cache dos artefatos do Prisma para acelerar builds
      - uses: actions/cache@v4
        with:
          path: |
            node_modules/.prisma
            prisma/generated
          key: ${{ runner.os }}-prisma-${{ hashFiles('prisma/schema.prisma') }}
          restore-keys: |
            ${{ runner.os }}-prisma-

      - name: Install dependencies with pnpm
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma Client
        run: pnpm exec prisma generate

      - name: Show Node/npm/pnpm versions
        run: |
          node -v
          npm -v
          pnpm -v || true
      # Checagens estáticas primeiro (mais rápidas)
      - run: pnpm run type-check
      - run: pnpm run lint

      # Testes antes do build (falham mais rápido)
      - run: pnpm test

      # Build por último (mais demorado)
      - run: pnpm run build
