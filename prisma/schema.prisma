generator client {
  provider = "prisma-client-js"
  seed     = "npx tsx prisma/seed.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Processo {
  id                   Int                 @id @default(autoincrement())
  numero               String              @unique
  dataCriacao          DateTime
  requerente           String?
  formaEntradaId       Int
  responsavelId        Int
  requeridoId          Int?
  situacaoId           Int
  encaminhamentoId     Int?
  pedidoManifestacaoId Int?
  contatoPrevioId      Int?
  evidenciaId          Int?
  anonimo              Boolean             @default(false)
  observacoes          String?
  contatoPrevio        ContatoPrevio?      @relation(fields: [contatoPrevioId], references: [id])
  encaminhamento       Encaminhamento?     @relation(fields: [encaminhamentoId], references: [id])
  evidencia            Evidencia?          @relation(fields: [evidenciaId], references: [id])
  formaEntrada         FormaEntrada        @relation(fields: [formaEntradaId], references: [id])
  pedidoManifestacao   PedidoManifestacao? @relation(fields: [pedidoManifestacaoId], references: [id])
  requerido            Requerido?          @relation(fields: [requeridoId], references: [id])
  responsavel          Responsavel         @relation(fields: [responsavelId], references: [id])
  situacao             Situacao            @relation(fields: [situacaoId], references: [id])

  @@map("Processo")
}

model FormaEntrada {
  id        Int        @id @default(autoincrement())
  nome      String     @unique
  processos Processo[]

  @@map("FormaEntrada")
}

model Requerido {
  id        Int        @id @default(autoincrement())
  nome      String
  cnpj      String?    @unique
  site      String?
  email     String?
  setorId   Int?
  cnaeId    Int?
  processos Processo[]
  cnae      CNAE?      @relation(fields: [cnaeId], references: [id])
  setor     Setor?     @relation(fields: [setorId], references: [id])

  @@map("Requerido")
}

model CNAE {
  id         Int         @id @default(autoincrement())
  active     Boolean     @default(true)
  code       String      @unique @db.VarChar(10)
  nome       String      @db.VarChar(255)
  requeridos Requerido[]

  @@map("CNAE")
}

model Setor {
  id         Int         @id @default(autoincrement())
  nome       String      @unique
  requeridos Requerido[]

  @@map("Setor")
}

model Situacao {
  id        Int        @id @default(autoincrement())
  nome      String     @unique
  processos Processo[]

  @@map("Situacao")
}

model Encaminhamento {
  id        Int        @id @default(autoincrement())
  nome      String     @unique
  processos Processo[]

  @@map("Encaminhamento")
}

model PedidoManifestacao {
  id        Int        @id @default(autoincrement())
  nome      String     @unique
  processos Processo[]

  @@map("PedidoManifestacao")
}

model ContatoPrevio {
  id        Int        @id @default(autoincrement())
  nome      String     @unique
  processos Processo[]

  @@map("ContatoPrevio")
}

model Evidencia {
  id        Int        @id @default(autoincrement())
  nome      String     @unique
  processos Processo[]

  @@map("Evidencia")
}

model Perfil {
  id         Int         @id @default(autoincrement())
  nome       String      @unique
  permissoes Permissao[]
  usuarios   User[]

  @@map("Perfil")
}

model Permissao {
  id        Int     @id @default(autoincrement())
  acao      String
  recurso   String
  permitido Boolean
  perfilId  Int
  perfil    Perfil  @relation(fields: [perfilId], references: [id])

  @@unique([perfilId, acao, recurso])
}

model Responsavel {
  id        Int        @id @default(autoincrement())
  nome      String     @unique
  userId    String?    @unique
  processos Processo[]
  user      User?      @relation(fields: [userId], references: [id])

  @@map("Responsavel")
}

model User {
  id           String       @id @default(uuid())
  email        String       @unique
  perfilId     Int?
  nome         String?
  responsaveis Responsavel?
  perfil       Perfil?      @relation(fields: [perfilId], references: [id])

  @@map("User")
}
